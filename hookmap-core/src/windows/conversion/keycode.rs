use crate::{bihashmap, common::keyboard::Key};
use bimap::BiHashMap;
use once_cell::sync::Lazy;

pub(super) static SCANCODE_MAP: Lazy<BiHashMap<Key, u32>> = Lazy::new(|| {
    bihashmap! {
        Key::Backspace => 0x08,
        Key::Tab => 0x09,
        Key::Enter => 0x0D,
        Key::Shift => 0x10,
        Key::Ctrl => 0x11,
        Key::Alt => 0x12,
        Key::CapsLock => 0x14,
        Key::Esc => 0x1B,
        Key::Henkan => 0x1C,
        Key::Muhenkan => 0x1D,
        Key::Space => 0x20,
        Key::PageUp => 0x21,
        Key::PageDown => 0x22,
        Key::End => 0x23,
        Key::Home => 0x24,
        Key::LeftArrow => 0x25,
        Key::UpArrow => 0x26,
        Key::RightArrow => 0x27,
        Key::DownArrow => 0x28,
        Key::PrintScreen => 0x2C,
        Key::Insert => 0x2D,
        Key::Delete => 0x2E,
        Key::Key0 => 0x30,
        Key::Key1 => 0x31,
        Key::Key2 => 0x32,
        Key::Key3 => 0x33,
        Key::Key4 => 0x34,
        Key::Key5 => 0x35,
        Key::Key6 => 0x36,
        Key::Key7 => 0x37,
        Key::Key8 => 0x38,
        Key::Key9 => 0x39,
        Key::A => 0x41,
        Key::B => 0x42,
        Key::C => 0x43,
        Key::D => 0x44,
        Key::E => 0x45,
        Key::F => 0x46,
        Key::G => 0x47,
        Key::H => 0x48,
        Key::I => 0x49,
        Key::J => 0x4A,
        Key::K => 0x4B,
        Key::L => 0x4C,
        Key::M => 0x4D,
        Key::N => 0x4E,
        Key::O => 0x4F,
        Key::P => 0x50,
        Key::Q => 0x51,
        Key::R => 0x52,
        Key::S => 0x53,
        Key::T => 0x54,
        Key::U => 0x55,
        Key::V => 0x56,
        Key::W => 0x57,
        Key::X => 0x58,
        Key::Y => 0x59,
        Key::Z => 0x5A,
        Key::LMeta => 0x5B,
        Key::RMeta => 0x5C,
        Key::Application => 0x5D,
        Key::Numpad0 => 0x60,
        Key::Numpad1 => 0x61,
        Key::Numpad2 => 0x62,
        Key::Numpad3 => 0x63,
        Key::Numpad4 => 0x64,
        Key::Numpad5 => 0x65,
        Key::Numpad6 => 0x66,
        Key::Numpad7 => 0x67,
        Key::Numpad8 => 0x68,
        Key::Numpad9 => 0x69,
        Key::NumpadAsterisk => 0x6A,
        Key::NumpadPlus => 0x6B,
        Key::NumpadMinus => 0x6D,
        Key::NumpadDot => 0x6E,
        Key::NumpadSlash => 0x6F,
        Key::F1 => 0x70,
        Key::F2 => 0x71,
        Key::F3 => 0x72,
        Key::F4 => 0x73,
        Key::F5 => 0x74,
        Key::F6 => 0x75,
        Key::F7 => 0x76,
        Key::F8 => 0x77,
        Key::F9 => 0x78,
        Key::F10 => 0x79,
        Key::F11 => 0x7A,
        Key::F12 => 0x7B,
        Key::F13 => 0x7C,
        Key::F14 => 0x7D,
        Key::F15 => 0x7E,
        Key::F16 => 0x7F,
        Key::F17 => 0x80,
        Key::F18 => 0x81,
        Key::F19 => 0x82,
        Key::F20 => 0x83,
        Key::F21 => 0x84,
        Key::F22 => 0x85,
        Key::F23 => 0x86,
        Key::F24 => 0x87,
        Key::Numlock => 0x90,
        Key::ScrollLock => 0x91,
        Key::LShift => 0xA0,
        Key::RShift => 0xA1,
        Key::LCtrl => 0xA2,
        Key::RCtrl => 0xA3,
        Key::LAlt => 0xA4,
        Key::RAlt => 0xA5,
        Key::Colon => 0xBA,
        Key::SemiColon => 0xBB,
        Key::Comma => 0xBC,
        Key::Minus => 0xBD,
        Key::Dot => 0xBE,
        Key::Slash => 0xBF,
        Key::At => 0xC0,
        Key::LeftSquareBracket => 0xDB,
        Key::BackSlashWithVerticalBar => 0xDC,
        Key::RightSquareBracket => 0xDD,
        Key::Hat => 0xDE,
        Key::BackSlashWithUnderLine => 0xE2,
        Key::Eisuu => 0xF0,
        Key::KatakanaHiragana => 0xF2,
        Key::HannkakuZenkaku => 0xF3,
    }
});
